"""
Django settings for datascience_portfolio project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-j0lip*y8!o^xxk=jfy&n*zj03t)4m#ev&rmm6637vbx_&xh66c'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost','3.7.71.218','portfolio.sparkbrains.in','127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'portfolio'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'datascience_portfolio.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,"templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'datascience_portfolio.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# STATICFILES_FINDERS = [
#     'django.contrib.staticfiles.finders.FileSystemFinder',
#     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
# ]


STATICFILES_DIRS = [
   os.path.join(BASE_DIR, 'static'),
]

# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
#STATIC_ROOT =''
STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


#ML models path.
YOLOV5 ="ML_Models/object_classification/yolov5/best.pt"
IMAGE_SAVING_PATH ="static/portfolio/"

#X-Ray classification 
OBJEJECT_CLASSIFICATION = 'ML_Models/classification_task/model.ckpt'

#Music generator
MUSIC_GENERATOR_MODEL = 'ML_Models/music/int_to_note.pkl'
MUSIC_GENERATOR_WEIGHT = 'ML_Models/music/weights.234.0.8730.hdf5'


#Stock prediction
GRAPH_SAVING_PATH = 'static/stock_prediction/'

#Segmentation
SEGMENTATION = 'ML_Models/segmentation_yolo/yollo/yolov5s-seg.pt/'
YAML_PATH = 'ML_Models/segmentation_yolo/yollo/data/coco128.yaml'

#Dashboard
CSV_PATH = 'ML_Models/dashboard/Employee-Attrition.csv'

#NLTK 


DIR_CORPORA = os.path.join(os.getenv('NLTK'),'/corpora')
DIR_WORDNET = os.path.join(os.getenv('NLTK'),'/corpora/wordnet')

DIR_PUNKT = os.path.join(os.getenv('NLTK'),'/tokenizers/punkt')
BASE_D=os.getenv('NLTK')
BASE_N=os.path.join(os.getenv('NLTK'),'/tokenizers')

N_PATH1 = os.path.join(os.getenv('NLTK'),'corpora')
N_PATH2 = os.path.join(os.getenv('NLTK'),'/tokenizers/punkt')
N_PATH3 = os.path.join(os.getenv('NLTK'),'/corpora/wordnet')

